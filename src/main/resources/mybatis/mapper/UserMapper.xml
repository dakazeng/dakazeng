<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ldq.emu.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.ldq.emu.entity.User">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="login_name" jdbcType="VARCHAR" property="loginName" />
    <result column="login_passwd" jdbcType="VARCHAR" property="loginPasswd" />
    <result column="user_sex" jdbcType="VARCHAR" property="userSex" />
    <result column="user_tel" jdbcType="VARCHAR" property="userTel" />
  </resultMap>
  <sql id="Base_Column_List">
    user_id, user_name, login_name, login_passwd, user_sex, user_tel
  </sql>
  <select id="selectByLoginName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select * from user
    where login_name = #{loginName,jdbcType=VARCHAR}
  </select>
 
  <select id="userList" parameterType="com.ldq.emu.entity.User" resultMap="BaseResultMap">
  	select * from user
	where 1=1 
      <if test="userName != null">
     	 and user_name like "%${userName}%"
      </if>
  </select>
  
  <select id="userCombobox" parameterType="com.ldq.emu.entity.User" resultMap="BaseResultMap">
	select * from user
  </select>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ldq.emu.entity.User">
    insert into user (user_id, user_name, login_name, 
      login_passwd, user_sex, user_tel
      )
    values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{loginName,jdbcType=VARCHAR}, 
      #{loginPasswd,jdbcType=VARCHAR}, #{userSex,jdbcType=VARCHAR}, #{userTel,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ldq.emu.entity.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="loginName != null">
        login_name,
      </if>
      <if test="loginPasswd != null">
        login_passwd,
      </if>
      <if test="userSex != null">
        user_sex,
      </if>
      <if test="userTel != null">
        user_tel,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null">
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="loginPasswd != null">
        #{loginPasswd,jdbcType=VARCHAR},
      </if>
      <if test="userSex != null">
        #{userSex,jdbcType=VARCHAR},
      </if>
      <if test="userTel != null">
        #{userTel,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ldq.emu.entity.User">
    update user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null">
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="loginPasswd != null">
        login_passwd = #{loginPasswd,jdbcType=VARCHAR},
      </if>
      <if test="userSex != null">
        user_sex = #{userSex,jdbcType=VARCHAR},
      </if>
      <if test="userTel != null">
        user_tel = #{userTel,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ldq.emu.entity.User">
    update user
    set user_name = #{userName,jdbcType=VARCHAR},
      login_name = #{loginName,jdbcType=VARCHAR},
      login_passwd = #{loginPasswd,jdbcType=VARCHAR},
      user_sex = #{userSex,jdbcType=VARCHAR},
      user_tel = #{userTel,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>